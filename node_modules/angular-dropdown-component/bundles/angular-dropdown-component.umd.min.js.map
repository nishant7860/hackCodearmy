{
  "version": 3,
  "file": "angular-dropdown-component.umd.min.js",
  "sources": [
    "ng://angular-dropdown-component/out/src/app/modules/dropdown/dropdown.component.ts",
    "ng://angular-dropdown-component/out/src/app/modules/dropdown/dropdown.pipe.ts",
    "ng://angular-dropdown-component/out/src/app/modules/dropdown/dropdown.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Input, Output, EventEmitter, ViewChild, ElementRef, SimpleChanges } from '@angular/core';\r\n\r\n// Import interfaces\r\nimport { IDropdownInput } from '../../interfaces/dropdown';\r\n\r\n@Component({\r\n  selector: \"ng-dropdown\",\r\n  template: `<ng-container>\n  <div class=\"ng-dropdown\">\n    <span *ngIf=\"dTitle\" [innerText]=\"dTitle\" class=\"ng-dropdown__title\"></span>\n    <ul class=\"ng-dropdown__container\" tabindex=\"0\" (focus)=\"ifContainerFocused=true\" (blur)=\"onDropdownBlur($event)\" [ngStyle]=\"ifContainerFocused ? containerFocusedStyles: {}\"\n      #dropdownMenu>\n      <li [ngStyle]=\"ifContainerFocused ? selectedItemFocusedStyles: {}\">\n        <a (click)=\"hideDropdown()\">\n          <span *ngIf=\"!editable; else ifEditableList\" (focus)=\"onInputFocus($event)\" [innerText]=\"_selectedOption?.name\"></span>\n          <ng-template #ifEditableList>\n            <input class=\"ng-dropdown__container--editable\" [ngModel]=\"_selectedOption | GetSelectedNamePipe\" (focus)=\"onInputFocus($event)\"/>\n          </ng-template>\n          <img src=\"assets/downPopup.png\" />\n        </a>\n      </li>\n      <ul class=\"ng-dropdown__container--list\" [ngStyle]=\"ifContainerFocused ? restOfListFocusedStyles: {}\">\n        <li *ngIf=\"filter\" [ngStyle]=\"ifContainerFocused ? selectedItemFocusedStyles: {}\">\n          <input #dropdownFilter class=\"ng-dropdown__container--list__filter\" placeholder=\"Search\" (keyup)=\"onFilterSearch($event)\" (blur)=\"onDropdownBlur($event)\" />\n        </li>\n        <ul class=\"ng-dropdown__container--list__sublist\" [ngStyle]=\"ifContainerFocused ? restOfListWithoutFilterFocusedStyles: {}\">\n          <ng-container *ngIf=\"_data?.length else noResults\">\n            <li *ngFor=\"let option of _data\" [ngClass]=\"_selectedOption?.name == option.name ? 'active' : ''\">\n              <a [innerText]=\"option.name\" (click)=\"onDropdownItemSelect($event, option)\"></a>\n            </li>\n          </ng-container>\n          <ng-template #noResults>\n            <li>\n              <a>No Results Found</a>\n            </li>\n          </ng-template>\n        </ul>\n      </ul>\n    </ul>\n    <div class=\"ng-dropdown__button\" [ngClass]=\"disabled ? 'disabled' : ''\" (mouseup)=\"onDropdownMenuClick($event)\" #dropdownButton>\n      <span *ngIf=\"!editable; else ifEditable\" [innerText]=\"_selectedOption?.name\"></span>\n      <ng-template #ifEditable>\n        <input #dropdownInput (keyup)=\"onInputChange($event)\" [ngModel]=\"_selectedOption | GetSelectedNamePipe\" />\n      </ng-template>\n      <img src=\"assets/downPopup.png\" />\n    </div>\n  </div>\n</ng-container>\n`,\r\n  styles: [`.ng-dropdown{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative;padding-bottom:10px}.ng-dropdown .ng-dropdown__title{padding-bottom:5px}.ng-dropdown .ng-dropdown__button{background:#fff;border:1px solid #c9c9c9;padding:2px 10px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;height:18px}.ng-dropdown .ng-dropdown__button span,.ng-dropdown__container>li a span{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-dropdown .ng-dropdown__button img{height:10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ng-dropdown .ng-dropdown__button input,.ng-dropdown .ng-dropdown__container li input.ng-dropdown__container--editable{width:100%;height:100%;border:none;outline:0;overflow:hidden;text-overflow:ellipsis}.ng-dropdown .ng-dropdown__button.disabled{pointer-events:none;opacity:.7}.ng-dropdown .ng-dropdown__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;background:#fff;list-style-type:none;border:1px solid #c9c9c9;position:fixed;left:-10000px;outline:0;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:100000;padding:0;margin:0;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23);box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.ng-dropdown .ng-dropdown__container:focus{left:0}.ng-dropdown .ng-dropdown__container:focus+.ng-dropdown__button{pointer-events:none}.ng-dropdown .ng-dropdown__container li:hover{background-color:#e0e0e0;color:#000}.ng-dropdown .ng-dropdown__container>li:first-child a{height:100%}.ng-dropdown .ng-dropdown__container>li:first-child,.ng-dropdown__container--list>li:first-child{position:fixed;background-color:#fff}.ng-dropdown .ng-dropdown__container>li:first-child a,.ng-dropdown__container--list>li:first-child a{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.ng-dropdown .ng-dropdown__container>li:first-child a img,.ng-dropdown__container--list>li:first-child a img{height:10px}.ng-dropdown .ng-dropdown__container>li:first-child:hover,.ng-dropdown__container--list>li:first-child:hover{color:initial}.ng-dropdown .ng-dropdown__container li a,.ng-dropdown__container--list>li:first-child li a{padding:0 10px;height:22px;line-height:22px;cursor:pointer;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;display:block;text-align:left}.ng-dropdown .ng-dropdown__container li input.ng-dropdown__container--list__filter{width:100%;padding:0 9px;height:22px;outline:0;-webkit-box-sizing:border-box;box-sizing:border-box;border:none;border-bottom:1px solid #e0e0e0;border-top:1px solid #e0e0e0}.ng-dropdown .ng-dropdown__container ul{list-style-type:none;padding:0;margin:0;overflow:auto}.ng-dropdown__container--list__sublist li:first-child{position:initial}.ng-dropdown__container--list__sublist li.active{background-color:#6fbbff;color:#fff}`]\r\n})\r\nexport class DropdownComponent {\r\n  public ifContainerFocused: boolean;\r\n\r\n  public containerFocusedStyles: object;\r\n  public selectedItemFocusedStyles: object;\r\n  public restOfListFocusedStyles: object;\r\n  public restOfListWithoutFilterFocusedStyles: object;\r\n\r\n  public _selectedOption: IDropdownInput | string;\r\n  public _data: IDropdownInput[];\r\n  public mutationObserverDOM: MutationObserver;\r\n\r\n  @Input() data: IDropdownInput[];\r\n  @Input() disabled: boolean;\r\n  @Input() dTitle: string;\r\n  @Input() selectedOption: IDropdownInput | string;\r\n  @Input() filter: boolean;\r\n  @Input() editable: boolean;\r\n\r\n  @Output() selectedOptionChange: EventEmitter<object | string> = new EventEmitter<object | string>();\r\n\r\n  // References of HTML\r\n  @ViewChild(\"dropdownMenu\") private dropdownMenu: ElementRef;\r\n  @ViewChild(\"dropdownButton\") private dropdownButton: ElementRef;\r\n  @ViewChild(\"dropdownInput\") private dropdownInput: ElementRef;\r\n  @ViewChild(\"dropdownFilter\") private dropdownFilter: ElementRef;\r\n\r\n  constructor() {\r\n    this.ifContainerFocused = false;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.mutationObserverDOM = new MutationObserver(mutations => {\r\n      this.setContainerDimensions();\r\n    });\r\n\r\n    this.mutationObserverDOM.observe(this.dropdownMenu.nativeElement, {\r\n      childList: true\r\n    });\r\n    this.mutationObserverDOM.observe( this.dropdownMenu.nativeElement.children[1], {\r\n      childList: true\r\n    });\r\n    if (this.filter) this.mutationObserverDOM.observe(this.dropdownMenu.nativeElement.children[1].children[1], {\r\n      childList: true\r\n    });\r\n    else this.mutationObserverDOM.observe(this.dropdownMenu.nativeElement.children[1].children[0], {\r\n      childList: true\r\n    });\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges) {\r\n    if (simpleChanges.hasOwnProperty(\"data\")) {\r\n      this._data = this.data;\r\n    }\r\n    if (this.data && !this.selectedOption) this.setDefaultOption();\r\n    else if (this.data && this.selectedOption) {\r\n      if (this.selectedOption.hasOwnProperty(\"id\")) {\r\n        this.data.forEach(obj => {\r\n          if (obj.id == this.selectedOption[\"id\"]) this._selectedOption = obj;\r\n        });\r\n      } else if (this.selectedOption.hasOwnProperty(\"name\")){\r\n        this.data.forEach(obj => {\r\n          if (obj.name == this.selectedOption[\"name\"]) this._selectedOption = obj;\r\n        });\r\n      } else if (this.editable) {\r\n        this._selectedOption = this.selectedOption;\r\n        return;\r\n      }\r\n      if (!this._selectedOption) this.setDefaultOption();\r\n    }\r\n  }\r\n\r\n  setDefaultOption() {\r\n    if (this.editable) this._selectedOption = \"\";\r\n    else this._selectedOption = this.data[0];\r\n  }\r\n\r\n  setContainerDimensions() {\r\n    let defaultDropdownHeight = this.dropdownMenu.nativeElement.children[0].offsetHeight;\r\n    let actualList;\r\n    if (this.filter) {\r\n      defaultDropdownHeight += this.dropdownMenu.nativeElement.children[1].children[0].offsetHeight;\r\n      actualList = this.dropdownMenu.nativeElement.children[1].children[1].children;\r\n    }\r\n    else actualList = this.dropdownMenu.nativeElement.children[1].children[0].children;\r\n\r\n    defaultDropdownHeight += Array.from(actualList).reduce((accumulator, currentValue) => accumulator + currentValue[\"offsetHeight\"], 0);\r\n\r\n    let dropdownButtonElement = this.dropdownButton.nativeElement;\r\n    let dropdownButtonRect = dropdownButtonElement.getBoundingClientRect();\r\n    let dropdownFilterHeight = this.filter ? this.dropdownFilter.nativeElement.offsetHeight : 0;\r\n\r\n    let distanceFromTop = dropdownButtonRect.top;\r\n    let distanceFromLeft = dropdownButtonRect.left;\r\n    let distanceFromBottom =\r\n      window.innerHeight - distanceFromTop - dropdownButtonElement.offsetHeight;\r\n    let distanceFromRight =\r\n      window.innerWidth - distanceFromLeft - dropdownButtonElement.offsetWidth;\r\n\r\n    this.selectedItemFocusedStyles = {\r\n      \"width\": dropdownButtonElement.offsetWidth - 2 + \"px\",\r\n      \"height\": dropdownButtonElement.offsetHeight -2 + \"px\"\r\n    };\r\n    this.restOfListWithoutFilterFocusedStyles = { \"margin-top\": dropdownFilterHeight + \"px\" };\r\n    // If the space below is more than the dropdown height\r\n    if (distanceFromBottom > defaultDropdownHeight) {\r\n      // Un-reversify the list of array\r\n      this.containerFocusedStyles = {\r\n        \"top\": distanceFromTop + \"px\",\r\n        \"left\": distanceFromLeft + \"px\",\r\n        \"width\": dropdownButtonElement.offsetWidth +'px',\r\n        \"flex-direction\": \"column\"\r\n      };\r\n      this.restOfListFocusedStyles = { \"margin-top\": dropdownButtonElement.offsetHeight + \"px\" };\r\n    } else if (distanceFromTop > defaultDropdownHeight) {\r\n      // If the space above is more than the dropdown height\r\n      // Reversify the list of array\r\n      this.containerFocusedStyles = {\r\n        \"bottom\": distanceFromBottom + \"px\",\r\n        \"left\": distanceFromLeft + \"px\",\r\n        \"width\": dropdownButtonElement.offsetWidth +'px',\r\n        \"flex-direction\": \"column-reverse\"\r\n      };\r\n      this.restOfListFocusedStyles = { \"margin-bottom\": dropdownButtonElement.offsetHeight + \"px\" };\r\n      this.selectedItemFocusedStyles = { ...this.selectedItemFocusedStyles, \"border-top\": \"1px solid #e0e0e0\" };\r\n    } else {\r\n      // If space above and below both are less, show where it is maximum\r\n      // When space below is more\r\n      if (distanceFromBottom > distanceFromTop) {\r\n        this.containerFocusedStyles = {\r\n          \"top\": distanceFromTop + \"px\",\r\n          \"bottom\": \"20px\",\r\n          \"left\": distanceFromLeft + \"px\",\r\n          \"width\": dropdownButtonElement.offsetWidth +'px',\r\n          \"flex-direction\": \"column\"\r\n        };\r\n        this.restOfListFocusedStyles = { \"margin-top\": dropdownButtonElement.offsetHeight + \"px\" };\r\n      } else {\r\n        // When space above is more\r\n        this.containerFocusedStyles = {\r\n          \"top\": \"20px\",\r\n          \"bottom\": distanceFromBottom + \"px\",\r\n          \"left\": distanceFromLeft + \"px\",\r\n          \"width\": dropdownButtonElement.offsetWidth +'px',\r\n          \"flex-direction\": \"column-reverse\"\r\n        };\r\n        this.restOfListFocusedStyles = { \"margin-bottom\": dropdownButtonElement.offsetHeight + \"px\" };\r\n        this.selectedItemFocusedStyles = { ...this.selectedItemFocusedStyles, \"border-top\": \"1px solid #e0e0e0\" };\r\n      }\r\n    }\r\n  }\r\n\r\n  onFilterSearch($event) {\r\n    this.setSearchedItems($event.target.value)\r\n  }\r\n\r\n  setSearchedItems(value) {\r\n    this._data = this.data.filter(element => element.name\r\n    .toLowerCase()\r\n    .indexOf(value.toLowerCase()) !== -1);\r\n  }\r\n\r\n  onInputFocus($event) {\r\n    this.dropdownInput.nativeElement.focus();\r\n    this.ifContainerFocused = false;\r\n  }\r\n\r\n  onInputChange($event) {\r\n    this._selectedOption = $event.target.value;\r\n\r\n    // Broadcast Event\r\n    this.selectedOptionChange.emit(this._selectedOption);\r\n  }\r\n\r\n  onDropdownItemSelect($event: MouseEvent, option: IDropdownInput) {\r\n    this._selectedOption = option;\r\n\r\n    // if (this.selectedOption.hasOwnProperty(\"id\"))\r\n    //   this.selectedOption = { id: this._selectedOption.id };\r\n    // else this.selectedOption = { name: this._selectedOption.name };\r\n\r\n    // Broadcast Event\r\n    this.selectedOptionChange.emit(option);\r\n    this.hideDropdown();\r\n  }\r\n\r\n  onDropdownMenuClick($event: MouseEvent) {\r\n    this.clearSearchFilter();\r\n    this.setContainerDimensions();\r\n    if ($event.target instanceof HTMLInputElement) return;\r\n    else this.showDropdown();\r\n  }\r\n\r\n  onDropdownBlur($event) {\r\n    if (this.dropdownFilter && $event.relatedTarget == this.dropdownFilter.nativeElement && $event.relatedTarget instanceof HTMLInputElement) return;\r\n    this.ifContainerFocused = false;\r\n    this.hideDropdown();\r\n  }\r\n\r\n  clearSearchFilter() {\r\n    if (!this.dropdownFilter) return;\r\n    this.dropdownFilter.nativeElement.value = \"\";\r\n    this.setSearchedItems(\"\");\r\n  }\r\n\r\n  showDropdown() {\r\n    this.dropdownMenu.nativeElement.focus();\r\n  }\r\n\r\n  hideDropdown() {\r\n    this.dropdownMenu.nativeElement.blur();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.mutationObserverDOM.disconnect();\r\n  }\r\n}\r\n",
    "import { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({name: 'GetSelectedNamePipe'})\n\nexport class GetSelectedNamePipe implements PipeTransform {\n  transform(selectedOption) : string {\n    return typeof selectedOption == 'object' ? selectedOption.name : selectedOption;\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from \"@angular/forms\";\n\nimport { DropdownComponent } from './dropdown.component';\nimport { GetSelectedNamePipe } from \"./dropdown.pipe\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [DropdownComponent, GetSelectedNamePipe],\n  exports: [DropdownComponent]\n})\nexport class DropdownModule {}\n"
  ],
  "names": [
    "DropdownComponent",
    "this",
    "selectedOptionChange",
    "EventEmitter",
    "ifContainerFocused",
    "prototype",
    "ngAfterViewInit",
    "_this",
    "mutationObserverDOM",
    "MutationObserver",
    "mutations",
    "setContainerDimensions",
    "observe",
    "dropdownMenu",
    "nativeElement",
    "childList",
    "children",
    "filter",
    "ngOnChanges",
    "simpleChanges",
    "hasOwnProperty",
    "_data",
    "data",
    "selectedOption",
    "setDefaultOption",
    "forEach",
    "obj",
    "id",
    "_selectedOption",
    "name",
    "editable",
    "actualList",
    "defaultDropdownHeight",
    "offsetHeight",
    "Array",
    "from",
    "reduce",
    "accumulator",
    "currentValue",
    "dropdownButtonElement",
    "dropdownButton",
    "dropdownButtonRect",
    "getBoundingClientRect",
    "dropdownFilterHeight",
    "dropdownFilter",
    "distanceFromTop",
    "top",
    "distanceFromLeft",
    "left",
    "distanceFromBottom",
    "window",
    "innerHeight",
    "innerWidth",
    "offsetWidth",
    "selectedItemFocusedStyles",
    "width",
    "height",
    "restOfListWithoutFilterFocusedStyles",
    "margin-top",
    "containerFocusedStyles",
    "flex-direction",
    "restOfListFocusedStyles",
    "bottom",
    "margin-bottom",
    "Object",
    "assign",
    "border-top",
    "onFilterSearch",
    "$event",
    "setSearchedItems",
    "target",
    "value",
    "element",
    "toLowerCase",
    "indexOf",
    "onInputFocus",
    "dropdownInput",
    "focus",
    "onInputChange",
    "emit",
    "onDropdownItemSelect",
    "option",
    "hideDropdown",
    "onDropdownMenuClick",
    "clearSearchFilter",
    "HTMLInputElement",
    "showDropdown",
    "onDropdownBlur",
    "relatedTarget",
    "blur",
    "ngOnDestroy",
    "disconnect",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "Input",
    "disabled",
    "dTitle",
    "Output",
    "ViewChild",
    "GetSelectedNamePipe",
    "transform",
    "Pipe",
    "DropdownModule",
    "NgModule",
    "imports",
    "CommonModule",
    "FormsModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
