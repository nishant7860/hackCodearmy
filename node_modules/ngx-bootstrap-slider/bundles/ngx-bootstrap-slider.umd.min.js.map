{"version":3,"sources":["ng://ngx-bootstrap-slider/lib/ngx-bootstrap-slider.service.ts","ng://ngx-bootstrap-slider/lib/ngx-bootstrap-slider.component.ts","ng://ngx-bootstrap-slider/lib/slider/slider.component.ts","ng://ngx-bootstrap-slider/lib/ngx-bootstrap-slider.module.ts"],"names":["NgxBootstrapSliderService","Injectable","args","providedIn","NgxBootstrapSliderComponent","prototype","ngOnInit","Component","selector","template","styles","SliderComponent","EventEmitter","Object","defineProperty","value","this","slider","getElement","setAttribute","initialStyle","setValue","initialOptions","changeAttribute","addChangeListeners","on","_this","slide","emit","slideStart","slideStop","event","change","valueChange","newValue","prepareSlider","name","refresh","undefined","Slider","sliderElement","nativeElement","ViewChild","Input","Output","NgxBootstrapSliderModule","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxBootstrapSliderService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mv-ngx-bootstrap-slider',\n  template: `\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgxBootstrapSliderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';\n\ndeclare var Slider: any;\n\n@Component({\n  selector: 'mv-slider',\n  template: `<input #slider>`,\n  styles: [``]\n})\nexport class SliderComponent implements OnInit {\n  // The slider HTML element\n  @ViewChild('slider') sliderElement;\n\n  // The slider object\n  slider: any;\n\n  initialOptions: any = {};\n  initialStyle: any;\n\n  // This property is not applied to the underlying slider element\n  @Input()\n  set style(value: any) {\n    if (this.slider) {\n      this.slider.getElement().setAttribute('style', value);\n    } else {\n      this.initialStyle = value;\n    }\n  }\n\n  // Handle the value (two-way)\n  @Input()\n  set value(value: number | any[]) {\n    if (this.slider) {\n      this.slider.setValue(value);\n    } else {\n      this.initialOptions.value = value;\n    }\n  }\n  @Output() valueChange = new EventEmitter();\n\n  // The following properties are applied to the underlying slider element\n  @Input()\n  set min(value: number) {\n    this.changeAttribute('min', value);\n  }\n\n  @Input()\n  set max(value: number) {\n    this.changeAttribute('max', value);\n  }\n\n  @Input()\n  set step(value: number) {\n    this.changeAttribute('step', value);\n  }\n\n  @Input()\n  set precision(value: number) {\n    this.changeAttribute('precision', value);\n  }\n\n  @Input()\n  set orientation(value: string) {\n    this.changeAttribute('orientation', value);\n  }\n\n  @Input()\n  set range(value: boolean) {\n    this.changeAttribute('range', value);\n  }\n\n  @Input()\n  set selection(value: string) {\n    this.changeAttribute('selection', value);\n  }\n\n  @Input()\n  set tooltip(value: string) {\n    this.changeAttribute('tooltip', value);\n  }\n\n  @Input()\n  set tooltipSplit(value: boolean) {\n    this.changeAttribute('tooltip_split', value);\n  }\n\n  @Input()\n  set tooltipPosition(value: boolean) {\n    this.changeAttribute('tooltipPosition', value);\n  }\n\n  @Input()\n  set handle(value: string) {\n    this.changeAttribute('handle', value);\n  }\n\n  @Input()\n  set reversed(value: boolean) {\n    this.changeAttribute('reversed', value);\n  }\n\n  @Input()\n  set rtl(value: boolean) {\n    this.changeAttribute('rtl', value);\n  }\n\n  @Input()\n  set enabled(value: boolean) {\n    this.changeAttribute('enabled', value);\n  }\n\n  @Input()\n  set naturalArrowKeys(value: boolean) {\n    this.changeAttribute('natural_arrow_keys', value);\n  }\n\n  @Input()\n  set ticks(value: any[]) {\n    this.changeAttribute('ticks', value);\n  }\n\n  @Input()\n  set ticksPositions(value: number[]) {\n    this.changeAttribute('ticks_positions', value);\n  }\n\n  @Input()\n  set ticksLabels(value: string[]) {\n    this.changeAttribute('ticks_labels', value);\n  }\n\n  @Input()\n  set ticksSnapBounds(value: number) {\n    this.changeAttribute('ticks_snap_bounds', value);\n  }\n\n  @Input()\n  set ticksTooltip(value: boolean) {\n    this.changeAttribute('ticks_tooltip', value);\n  }\n\n  @Input()\n  set scale(value: string) {\n    this.changeAttribute('scale', value);\n  }\n\n  @Input()\n  set labelledBy(value: string[]) {\n    this.changeAttribute('labelledby', value);\n  }\n\n  @Input()\n  set rangeHighlights(value: any[]) {\n    this.changeAttribute('rangeHighlights', value);\n  }\n\n  @Input()\n  set formatter(value: Function) {\n    this.changeAttribute('formatter', value);\n  }\n\n  // The following events are emitted\n  @Output() slide = new EventEmitter();\n\n  @Output() slideStart = new EventEmitter();\n\n  @Output() slideStop = new EventEmitter();\n\n  @Output() change = new EventEmitter();\n\n  constructor() { }\n\n  private addChangeListeners() {\n    this.slider.on('slide', (value: any) => {\n      this.slide.emit(value);\n    });\n\n    this.slider.on('slideStart', (value: any) => {\n      this.slideStart.emit(value);\n    });\n\n    this.slider.on('slideStop', (value: any) => {\n      this.slideStop.emit(value);\n    });\n\n    this.slider.on('change', (event: any) => {\n      this.change.emit(event);\n      this.valueChange.emit(event.newValue);\n    });\n  }\n\n  private prepareSlider() {\n    // We need to add the change listeners again after each refresh\n    this.addChangeListeners();\n\n    // Add the styling to the element\n    this.slider.getElement().setAttribute('style', this.initialStyle);\n  }\n\n  private changeAttribute(name: string, value: any) {\n    if (this.slider) {\n      this.slider.setAttribute(name, value);\n      this.slider.refresh();\n      this.prepareSlider();\n    } else {\n      this.initialOptions[name] = value;\n    }\n  }\n\n  ngOnInit() {\n    // Don't set the value over the initial options, because it will alway\n    // be reset. This option seems to be a little buggy.\n    let value = undefined;\n\n    if (this.initialOptions.value) {\n      value = this.initialOptions.value;\n      delete this.initialOptions['value'];\n    }\n\n    this.slider = new Slider(this.sliderElement.nativeElement, this.initialOptions);\n\n    if (value) {\n      this.slider.setValue(value);\n    }\n\n    this.prepareSlider();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxBootstrapSliderComponent } from './ngx-bootstrap-slider.component';\nimport { SliderComponent } from './slider/slider.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxBootstrapSliderComponent, SliderComponent],\n  exports: [\n    NgxBootstrapSliderComponent,\n    SliderComponent\n  ]\n})\nexport class NgxBootstrapSliderModule { }\n"]}