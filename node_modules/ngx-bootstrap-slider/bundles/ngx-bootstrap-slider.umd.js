(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ngx-bootstrap-slider', ['exports', '@angular/core'], factory) :
    (factory((global['ngx-bootstrap-slider'] = {}),global.ng.core));
}(this, (function (exports,i0) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxBootstrapSliderService = (function () {
        function NgxBootstrapSliderService() {
        }
        NgxBootstrapSliderService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] },
        ];
        /** @nocollapse */
        NgxBootstrapSliderService.ctorParameters = function () { return []; };
        /** @nocollapse */ NgxBootstrapSliderService.ngInjectableDef = i0.defineInjectable({ factory: function NgxBootstrapSliderService_Factory() { return new NgxBootstrapSliderService(); }, token: NgxBootstrapSliderService, providedIn: "root" });
        return NgxBootstrapSliderService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxBootstrapSliderComponent = (function () {
        function NgxBootstrapSliderComponent() {
        }
        /**
         * @return {?}
         */
        NgxBootstrapSliderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        NgxBootstrapSliderComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'mv-ngx-bootstrap-slider',
                        template: "\n    <p>\n      ngx-bootstrap-slider works!\n    </p>\n  ",
                        styles: []
                    },] },
        ];
        /** @nocollapse */
        NgxBootstrapSliderComponent.ctorParameters = function () { return []; };
        return NgxBootstrapSliderComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var SliderComponent = (function () {
        function SliderComponent() {
            this.initialOptions = {};
            this.valueChange = new i0.EventEmitter();
            // The following events are emitted
            this.slide = new i0.EventEmitter();
            this.slideStart = new i0.EventEmitter();
            this.slideStop = new i0.EventEmitter();
            this.change = new i0.EventEmitter();
        }
        Object.defineProperty(SliderComponent.prototype, "style", {
            // This property is not applied to the underlying slider element
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this.slider) {
                    this.slider.getElement().setAttribute('style', value);
                }
                else {
                    this.initialStyle = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "value", {
            // Handle the value (two-way)
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                if (this.slider) {
                    this.slider.setValue(value);
                }
                else {
                    this.initialOptions.value = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "min", {
            // The following properties are applied to the underlying slider element
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "max", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "step", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('step', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "precision", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('precision', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "orientation", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('orientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "range", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('range', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "selection", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('selection', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "tooltip", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('tooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "tooltipSplit", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('tooltip_split', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "tooltipPosition", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('tooltipPosition', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "handle", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('handle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "reversed", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('reversed', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "rtl", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('rtl', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "enabled", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "naturalArrowKeys", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('natural_arrow_keys', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "ticks", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('ticks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "ticksPositions", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('ticks_positions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "ticksLabels", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('ticks_labels', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "ticksSnapBounds", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('ticks_snap_bounds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "ticksTooltip", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('ticks_tooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "scale", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('scale', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "labelledBy", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('labelledby', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "rangeHighlights", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('rangeHighlights', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SliderComponent.prototype, "formatter", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this.changeAttribute('formatter', value);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        SliderComponent.prototype.addChangeListeners = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this.slider.on('slide', function (value) {
                    _this.slide.emit(value);
                });
                this.slider.on('slideStart', function (value) {
                    _this.slideStart.emit(value);
                });
                this.slider.on('slideStop', function (value) {
                    _this.slideStop.emit(value);
                });
                this.slider.on('change', function (event) {
                    _this.change.emit(event);
                    _this.valueChange.emit(event.newValue);
                });
            };
        /**
         * @return {?}
         */
        SliderComponent.prototype.prepareSlider = /**
         * @return {?}
         */
            function () {
                // We need to add the change listeners again after each refresh
                this.addChangeListeners();
                // Add the styling to the element
                this.slider.getElement().setAttribute('style', this.initialStyle);
            };
        /**
         * @param {?} name
         * @param {?} value
         * @return {?}
         */
        SliderComponent.prototype.changeAttribute = /**
         * @param {?} name
         * @param {?} value
         * @return {?}
         */
            function (name, value) {
                if (this.slider) {
                    this.slider.setAttribute(name, value);
                    this.slider.refresh();
                    this.prepareSlider();
                }
                else {
                    this.initialOptions[name] = value;
                }
            };
        /**
         * @return {?}
         */
        SliderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                // Don't set the value over the initial options, because it will alway
                // be reset. This option seems to be a little buggy.
                var /** @type {?} */ value = undefined;
                if (this.initialOptions.value) {
                    value = this.initialOptions.value;
                    delete this.initialOptions['value'];
                }
                this.slider = new Slider(this.sliderElement.nativeElement, this.initialOptions);
                if (value) {
                    this.slider.setValue(value);
                }
                this.prepareSlider();
            };
        SliderComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'mv-slider',
                        template: "<input #slider>",
                        styles: [""]
                    },] },
        ];
        /** @nocollapse */
        SliderComponent.ctorParameters = function () { return []; };
        SliderComponent.propDecorators = {
            sliderElement: [{ type: i0.ViewChild, args: ['slider',] }],
            style: [{ type: i0.Input }],
            value: [{ type: i0.Input }],
            valueChange: [{ type: i0.Output }],
            min: [{ type: i0.Input }],
            max: [{ type: i0.Input }],
            step: [{ type: i0.Input }],
            precision: [{ type: i0.Input }],
            orientation: [{ type: i0.Input }],
            range: [{ type: i0.Input }],
            selection: [{ type: i0.Input }],
            tooltip: [{ type: i0.Input }],
            tooltipSplit: [{ type: i0.Input }],
            tooltipPosition: [{ type: i0.Input }],
            handle: [{ type: i0.Input }],
            reversed: [{ type: i0.Input }],
            rtl: [{ type: i0.Input }],
            enabled: [{ type: i0.Input }],
            naturalArrowKeys: [{ type: i0.Input }],
            ticks: [{ type: i0.Input }],
            ticksPositions: [{ type: i0.Input }],
            ticksLabels: [{ type: i0.Input }],
            ticksSnapBounds: [{ type: i0.Input }],
            ticksTooltip: [{ type: i0.Input }],
            scale: [{ type: i0.Input }],
            labelledBy: [{ type: i0.Input }],
            rangeHighlights: [{ type: i0.Input }],
            formatter: [{ type: i0.Input }],
            slide: [{ type: i0.Output }],
            slideStart: [{ type: i0.Output }],
            slideStop: [{ type: i0.Output }],
            change: [{ type: i0.Output }]
        };
        return SliderComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgxBootstrapSliderModule = (function () {
        function NgxBootstrapSliderModule() {
        }
        NgxBootstrapSliderModule.decorators = [
            { type: i0.NgModule, args: [{
                        imports: [],
                        declarations: [NgxBootstrapSliderComponent, SliderComponent],
                        exports: [
                            NgxBootstrapSliderComponent,
                            SliderComponent
                        ]
                    },] },
        ];
        return NgxBootstrapSliderModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.NgxBootstrapSliderService = NgxBootstrapSliderService;
    exports.NgxBootstrapSliderComponent = NgxBootstrapSliderComponent;
    exports.NgxBootstrapSliderModule = NgxBootstrapSliderModule;
    exports.SliderComponent = SliderComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,